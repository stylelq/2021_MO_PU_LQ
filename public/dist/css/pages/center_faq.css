.center-faq .paging{margin-top:2.5rem}.center-filter{margin-bottom:2.5rem}.center-tab{margin-top:1.875rem}.center-tab__list{overflow:hidden}.center-tab__item{width:25%;float:left;text-align:center}.center-tab__item:nth-child(4n+1){clear:both}.center-tab__link{display:block;font-size:.75rem;line-height:1.5;letter-spacing:.06em;font-weight:300;color:#484848;padding:.5625rem .3125rem;background-color:#f5f5f5}.is-current .center-tab__link{background-color:#9B192F;color:#fff;font-weight:500}.notice-faq{border-top:solid 1px #000;position:relative}.notice-faq:after{content:"";width:100%;height:1px;background-color:#000;z-index:5;position:absolute;bottom:0;left:0}.notice-faq__list{margin-bottom:-1px}.faq-item__inner{margin:0}.faq-item__link{display:block;padding:0 1.25rem;font-family:"noto-kr",Sans-Serif}.faq-item__text{display:block;border-bottom:solid 1px #F5F5F2;font-size:.75rem;line-height:1.666667;letter-spacing:.06em;font-weight:500;padding:1.25rem 0;position:relative;padding-left:2.125rem;padding-right:.9375rem}.is-active .faq-item__text{border-color:#CBCBCB}.faq-item__text:before{content:"";width:1.5rem;height:1.5rem;background:url("../../images/common/ico_faq_q_normal.svg?ver=211025") no-repeat center center / contain;background-size:1.5rem 1.5rem;position:absolute;left:0;top:1.0625rem}.is-active .faq-item__text:before{background:url("../../images/common/ico_faq_q.svg?ver=211025") no-repeat center center / contain}.faq-item__text:after{content:"";width:.5rem;height:.25rem;background:url("../../images/common/ico_faq_arrow.svg?ver=211025") no-repeat center center / contain;background-size:.5rem .25rem;position:absolute;right:0;top:1.75rem}.is-active .faq-item__text:after{transform:rotate(180deg)}.faq-item .faq-item__cont{font-size:.75rem;line-height:1.5;letter-spacing:.06em;font-weight:300;font-weight:400;background-color:#f5f5f5;padding:1.25rem .9375rem 1.875rem 3.125rem;margin:0 1.25rem;position:relative;font-family:"noto-kr",Sans-Serif;display:none}.faq-item .faq-item__cont:before{content:"";width:1.5rem;height:1.5rem;background:url("../../images/common/ico_faq_a.svg?ver=211025") no-repeat center center / contain;background-size:1.5rem 1.5rem;position:absolute;left:.9375rem;top:1rem}.is-active .faq-item .faq-item__cont{display:block}.faq-item .faq-item__cont strong{font-weight:500}.faq-item .faq-item__cont p{margin:.9375rem 0 0}.faq-item .faq-item__cont p:first-child{margin:0}.service-center .notData-wrap{margin-top:1.875rem}.service-center .notData-wrap__title{text-align:center;padding:1.875rem 0 1.875rem;font-size:.75rem;line-height:1.5;letter-spacing:.06em;font-weight:300}.service-center .notData-wrap__title.is-point{font-size:.875rem;line-height:1.571429;letter-spacing:.06em;font-weight:400;padding:0}.service-center .notData-wrap__title.is-point .notData-wrap__title--text{color:#9B192F}

/*# sourceMappingURL=data:application/json;base64, */
/*# sourceMappingURL=data:application/json;base64, */
