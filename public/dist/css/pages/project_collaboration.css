.collabo-list{padding:5.555556vw 0 13.888889vw;box-sizing:border-box}.collabo-list__wrap+.collabo-list__wrap{margin-top:13.888889vw}.collabo-list__list{display:inline-block}.collabo-list__item{position:relative}.collabo-list__link{display:block}.collabo-list__img{display:block;width:100%}.collabo-list__box{top:50%;transform:translateY(-50%);position:absolute;left:0;right:0;margin:0 5.555556vw;padding:2.777778vw 0;font-size:4.444444vw;letter-spacing:.055556vw;color:#fff;border:1px solid #fff;text-align:center;text-transform:uppercase}

/*# sourceMappingURL=data:application/json;base64, */
